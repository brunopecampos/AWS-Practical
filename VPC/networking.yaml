AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Generator: "former2"
Description: ""
Resources:
  EC2VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        - Key: "Name"
          Value: "opus-vpc"

  EC2Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !GetAtt EC2Subnet3.AvailabilityZone
      CidrBlock: "10.0.0.0/20"
      VpcId: !Ref EC2VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "opus-subnet-public1-${EC2Subnet3.AvailabilityZone}"

  EC2Subnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !GetAtt EC2Subnet4.AvailabilityZone
      CidrBlock: "10.0.144.0/20"
      VpcId: !Ref EC2VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "opus-subnet-private2-${EC2Subnet4.AvailabilityZone}"

  EC2Subnet3:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: "10.0.128.0/20"
      VpcId: !Ref EC2VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "opus-subnet-private1-${AWS::Region}a"

  EC2Subnet4:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: "10.0.16.0/20"
      VpcId: !Ref EC2VPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "opus-subnet-public2-${AWS::Region}c"

  EC2InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "opus-igw"

  EC2EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"
      Tags:
        - Key: "Name"
          Value: !Sub "opus-eip-${AWS::Region}c"

  EC2EIP2:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"
      Tags:
        - Key: "Name"
          Value: !Sub "opus-eip-${AWS::Region}a"

  EC2NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      SubnetId: !Ref EC2Subnet
      Tags:
        - Key: "Name"
          Value: !Sub "opus-nat-public1-${EC2Subnet.AvailabilityZone}"
      AllocationId: !GetAtt EC2EIP2.AllocationId

  EC2NatGateway2:
    Type: "AWS::EC2::NatGateway"
    Properties:
      SubnetId: !Ref EC2Subnet4
      Tags:
        - Key: "Name"
          Value: !Sub "opus-nat-public2-${EC2Subnet2.AvailabilityZone}"
      AllocationId: !GetAtt EC2EIP.AllocationId

  EC2RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: "Name"
          Value: !Sub "opus-rtb-private1-${EC2Subnet.AvailabilityZone}"

  EC2RouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: "Name"
          Value: "opus-rtb-public"

  EC2RouteTable3:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: "Name"
          Value: !Sub "opus-rtb-private2-${EC2Subnet2.AvailabilityZone}"

  EC2Route:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref EC2NatGateway
      RouteTableId: !Ref EC2RouteTable

  EC2Route2:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref EC2InternetGateway
      RouteTableId: !Ref EC2RouteTable2

  EC2Route3:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref EC2NatGateway2
      RouteTableId: !Ref EC2RouteTable3

  EC2SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable
      SubnetId: !Ref EC2Subnet3

  EC2SubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable2
      SubnetId: !Ref EC2Subnet

  EC2SubnetRouteTableAssociation3:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable2
      SubnetId: !Ref EC2Subnet4

  EC2SubnetRouteTableAssociation4:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable3
      SubnetId: !Ref EC2Subnet2

  EC2VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref EC2InternetGateway
      VpcId: !Ref EC2VPC

  #EC2NetworkInterface:
  #  Type: "AWS::EC2::NetworkInterface"
  #  Properties:
  #    Description: "Interface for NAT Gateway nat-0b109dfeaad95db05"
  #    PrivateIpAddress: "10.0.11.187"
  #    PrivateIpAddresses:
  #      - PrivateIpAddress: "10.0.11.187"
  #        Primary: true
  #    SubnetId: !Ref EC2Subnet
  #    SourceDestCheck: false
#
#EC2NetworkInterface2:
#  Type: "AWS::EC2::NetworkInterface"
#  Properties:
#    Description: "Interface for NAT Gateway nat-03839ed9b133fa85d"
#    PrivateIpAddress: "10.0.20.247"
#    PrivateIpAddresses:
#      - PrivateIpAddress: "10.0.20.247"
#        Primary: true
#    SubnetId: !Ref EC2Subnet4
#    SourceDestCheck: false
