AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Generator: "former2"
Description: ""
Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0d50e5e845c552faf"
      InstanceType: "t2.micro"
      KeyName: "aws_login"
      AvailabilityZone: !Sub "${AWS::Region}a"
      Tenancy: "default"
      SubnetId: "subnet-08fc33ef0788fc8ec"
      EbsOptimized: false
      SecurityGroupIds:
        - !Ref EC2SecurityGroup2
        - !Ref EC2SecurityGroup
      SourceDestCheck: true
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            Encrypted: false
            VolumeSize: 8
            SnapshotId: "snap-0d03332bb41895992"
            VolumeType: "gp2"
            DeleteOnTermination: true
      UserData: "IyEvYmluL2Jhc2gKCiMgaW5zdGFsbCBnaXQsIG5vZGUgYW5kIHlhcm4KYXB0IHVwZGF0ZSAteQpjdXJsIC1mc1NMIGh0dHBzOi8vZGViLm5vZGVzb3VyY2UuY29tL3NldHVwXzE5LnggfCBzdWRvIC1FIGJhc2ggLQpzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSBub2RlanMgZ2l0CiMgRm9yIHRlc3RpbmcgcmVhc29ucwojc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgbXlzcWwtY2xpZW50CnN1ZG8gbnBtIGluc3RhbGwgLS1nbG9iYWwgeWFybgojIGNsb25lIGJhY2tlbmQgc3ViZGlyIG9mIHJlcG8KY2QgL2hvbWUvdWJ1bnR1CmdpdCBjbG9uZSAtLWRlcHRoIDEgLS1maWx0ZXI9YmxvYjpub25lIGh0dHBzOi8vZ2l0aHViLmNvbS9icnVub3BlY2FtcG9zL0FXUy1QcmFjdGljYWwuZ2l0IC0tc3BhcnNlIApjZCBBV1MtUHJhY3RpY2FsIApnaXQgY29uZmlnIC0tZ2xvYmFsIC0tYWRkIHNhZmUuZGlyZWN0b3J5ICRQV0QKZ2l0IHNwYXJzZS1jaGVja291dCBpbml0IC0tY29uZQpnaXQgc3BhcnNlLWNoZWNrb3V0IHNldCAuL0VDMi9iYWNrZW5kCiMgaW5zdGFsbCBkZXBlbmRlbmNpZXMgYW5kIHN0YXJ0IHNlcnZlcgpjZCAuL0VDMi9iYWNrZW5kCnlhcm4gaW5zdGFsbAojbm9kZSBzZXJ2ZXIuanM="
      Tags:
        - Key: "Name"
          Value: "opus-machine"
      HibernationOptions:
        Configured: false
      EnclaveOptions:
        Enabled: false

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "launch-wizard-2 created 2023-02-28T10:35:53.630Z"
      GroupName: "launch-wizard-2"
      VpcId: "vpc-0a0cddaf04384e4ab"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  EC2SecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub "Security group attached to instances to securely connect to ${RDSDBInstance}. Modification could lead to connection loss."
      GroupName: "ec2-rds-1"
      VpcId: "vpc-0a0cddaf04384e4ab"
      SecurityGroupEgress:
        - DestinationSecurityGroupId: !Ref EC2SecurityGroup4
          Description: !Sub "Rule to allow connections to ${RDSDBInstance} from any instances this security group is attached to"
          FromPort: !GetAtt RDSDBInstance.Endpoint.Port
          IpProtocol: "tcp"
          ToPort: !GetAtt RDSDBInstance.Endpoint.Port

  EC2SecurityGroup3:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Created by RDS management console"
      GroupName: "db-firewall-sg"
      VpcId: "vpc-0a0cddaf04384e4ab"
      SecurityGroupIngress:
        - CidrIp: "177.157.236.147/32"
          FromPort: !GetAtt RDSDBInstance.Endpoint.Port
          IpProtocol: "tcp"
          ToPort: !GetAtt RDSDBInstance.Endpoint.Port
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  EC2SecurityGroup4:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub "Security group attached to ${RDSDBInstance} to allow EC2 instances with specific security groups attached to connect to the database. Modification could lead to connection loss."
      GroupName: "rds-ec2-1"
      VpcId: "vpc-0a0cddaf04384e4ab"
      SecurityGroupIngress:
        - SourceSecurityGroupId: "sg-048536d18a0d3bcb6"
          SourceSecurityGroupOwnerId: !Ref AWS::AccountId
          Description: "Rule to allow connections from EC2 instances with sg-048536d18a0d3bcb6 attached"
          FromPort: !GetAtt RDSDBInstance.Endpoint.Port
          IpProtocol: "tcp"
          ToPort: !GetAtt RDSDBInstance.Endpoint.Port

  RDSDBInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: "opus-database"
      AllocatedStorage: 20
      DBInstanceClass: "db.t2.micro"
      Engine: "mysql"
      MasterUsername: "admin"
      MasterUserPassword: "REPLACEME"
      PreferredBackupWindow: "07:23-07:53"
      BackupRetentionPeriod: 7
      AvailabilityZone: !Sub "${AWS::Region}a"
      PreferredMaintenanceWindow: "tue:06:32-tue:07:02"
      MultiAZ: false
      EngineVersion: "8.0.28"
      AutoMinorVersionUpgrade: true
      LicenseModel: "general-public-license"
      PubliclyAccessible: false
      StorageType: "gp2"
      Port: 3306
      StorageEncrypted: false
      CopyTagsToSnapshot: true
      MonitoringInterval: 0
      EnableIAMDatabaseAuthentication: false
      EnablePerformanceInsights: false
      DeletionProtection: false
      DBSubnetGroupName: "rds-ec2-db-subnet-group-2"
      VPCSecurityGroups:
        - "sg-0a925b9abf5c569a6"
        - "sg-0208367eea821d6a3"
      MaxAllocatedStorage: 200
      DBParameterGroupName: "default.mysql8.0"
      OptionGroupName: "default:mysql-8-0"
      CACertificateIdentifier: "rds-ca-2019"

  RDSDBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Created from the RDS Management Console"
      DBSubnetGroupName: "rds-ec2-db-subnet-group-2"
      SubnetIds:
        - "subnet-0776dc82af5fc0f8d"
        - "subnet-0ed35de78bc7dbf31"
